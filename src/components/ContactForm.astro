---
---

<div class="w-full h-full flex flex-col bg-[#1c2333] rounded-lg lg:rounded-l-none shadow-2xl border border-[#2a324d] opacity-80">
  <!-- Title Bar -->
  <div class="h-10 bg-[#1c2333]/80 backdrop-blur-sm py-6 px-4 md:px-8 lg:px-10 flex items-center justify-end border-b border-[#2a324d]">
    <div class="flex items-center text-[#8790a7] text-md">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="w-5 h-5 text-blue-500 mr-2"
      >
        <polyline points="4 17 10 11 4 5"></polyline>
        <line x1="12" y1="19" x2="20" y2="19"></line>
      </svg>
      <span class="text-amber-400">Contáctame...</span>
    </div>
  </div>
  
  <!-- Form -->
  <div class="flex-grow p-4 md:p-8 lg:p-10 text-green-400 font-mono">
    <form id="contactForm" method="post" class="h-full flex flex-col justify-between">
      <div class="space-y-8">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          <div class="relative z-0">
            <input
              type="text"
              id="full_name"
              name="full_name"
              class="block py-2.5 px-0 w-full text-sm text-gray-300 bg-transparent border-0 border-b-2 border-gray-600 appearance-none focus:outline-none focus:ring-0 focus:border-[#00ff00] peer"
              placeholder=""
              
            />
            <label for="full_name" class="absolute text-md text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 peer-focus:text-[#00ff00] peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto">
              Nombre y apellido
            </label>
          </div>
    
          <div class="relative z-0">
            <input
              type="email"
              id="email"
              name="email"
              class="block py-2.5 px-0 w-full text-sm text-gray-300 bg-transparent border-0 border-b-2 border-gray-600 appearance-none focus:outline-none focus:ring-0 focus:border-[#00ff00] peer"
              placeholder=""
              
            />
            <label for="email" class="absolute text-md text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 peer-focus:text-[#00ff00] peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto">
              Correo
            </label>
          </div>
        </div>
    
        <div class="relative z-0">
          <input
            type="text"
            id="subject"
            name="subject"
            class="block py-2.5 px-0 w-full text-sm text-gray-300 bg-transparent border-0 border-b-2 border-gray-600 appearance-none focus:outline-none focus:ring-0 focus:border-[#00ff00] peer"
            placeholder=""
            
          />
          <label for="subject" class="absolute text-md text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 peer-focus:text-[#00ff00] peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto">
            Asunto
          </label>
        </div>
    
        <div class="relative z-0 flex-grow">
          <textarea 
            id="message"
            name="message"
            rows="8"
            placeholder=" "
            class="block py-2.5 px-0 w-full text-sm text-gray-300 bg-transparent border-0 border-b-2 border-gray-600 appearance-none focus:outline-none focus:ring-0 focus:border-[#00ff00] peer"
            
          ></textarea>
          <label for="message" class="absolute text-md text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 peer-focus:text-[#00ff00] peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto">
            Mensaje
          </label>
        </div>
      </div>

      <!-- ReCAPTCHA Widget -->
      <div
        class="g-recaptcha flex justify-end mt-4"
        data-theme="dark"
        data-sitekey={import.meta.env.RECAPTCHA_SITE_KEY}
      ></div>

      <div id="sending" class="mt-4 text-center">
        <div id="sending-message" class="text-[#00ff00] animate-pulse hidden">
          Enviando
          <span class="inline-block animate-bounce">.</span>
          <span class="inline-block animate-bounce delay-100">.</span>
          <span class="inline-block animate-bounce delay-200">.</span>
        </div>
        <div id="sent-message" class="text-[#00ff00] font-bold text-lg hidden opacity-0 transition-all duration-500 ease-in-out transform translate-y-4">
          ¡Mensaje enviado! <span class="text-sm">Te contactaremos a la brevedad</span> 
        </div>
      </div>

      <button
        id="btnSubmit"
        class="mt-4 relative text-center h-12 w-full transition-all duration-500 before:absolute before:top-0 before:left-0 before:w-full
          before:h-full before:bg-zinc-400 before:transition-all before:duration-300 before:opacity-10 before:hover:opacity-0
          after:absolute after:top-0 after:left-0 after:w-full after:h-full after:opacity-0 after:transition-all 
          after:duration-300 after:border after:border-[#00ff00] after:hover:opacity-100 disabled:before:hover:opacity-10
          disabled:after:hover:opacity-0 disabled:opacity-50 group"
      >
        <span class="relative text-gray-300 uppercase font-mono transition-colors duration-300 group-hover:text-[#00ff00]">
          ENVIAR MENSAJE
        </span>
      </button>

    </form>
  </div>
</div>

<script src="https://www.google.com/recaptcha/api.js" async defer></script>

<script>
  import JustValidate from 'just-validate';
  const validate = new JustValidate('#contactForm', {
    errorLabelCssClass: 'mt-2 text-sm text-red-400 font-semibold',
    errorLabelStyle: ''
  });

  validate
    .addField('#full_name', [
      { rule: 'required', errorMessage: '[Obligatorio]' },
      { rule: 'minLength', value: 3, errorMessage: '[Debe tener al menos 3 caracteres]' },
    ])
    .addField('#email', [
      { rule: 'required', errorMessage: '[Obligatorio]' },
      { rule: 'email', errorMessage: '[Correo inválido]' },
    ])
    .addField('#subject', [
      { rule: 'required', errorMessage: '[Obligatorio]' },
      { rule: 'minLength', value: 5, errorMessage: '[Debe tener al menos 5 caracteres]' },
    ])
    .addField('#message', [
      { rule: 'required', errorMessage: '[Obligatorio]' },
      { rule: 'minLength', value: 5, errorMessage: '[Debe tener al menos 5 caracteres]' },
    ])
    .onSuccess( async (event: any) => {
      event.preventDefault();

      // Verify reCAPTCHA
      const recaptchaResponse = grecaptcha.getResponse();
      if (!recaptchaResponse) {
        alert('Por favor, completa el reCAPTCHA antes de enviar el formulario.');
        return;
      }

      const form = event.target as HTMLFormElement;
      const btnSubmit = form.querySelector('#btnSubmit') as HTMLButtonElement;
      const sendingDiv = document.getElementById('sending');
      const sendingMessage = document.getElementById('sending-message');
      const sentMessage = document.getElementById('sent-message');
      const errorMessage = document.getElementById('error-message');
      // Actions
      btnSubmit.disabled = true;
      sendingDiv?.classList.remove('hidden');
      sendingMessage?.classList.remove('hidden');
      sentMessage?.classList.add('hidden', 'opacity-0', 'translate-y-4');
      errorMessage?.classList.add('hidden', 'opacity-0', 'translate-y-4');
      // Form Data
      const formData = new FormData(form);
      formData.append('recaptcha', recaptchaResponse);
      const data = Object.fromEntries( formData.entries() );

      try {

        const response = await fetch('/api/send', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data),
        });
        
        sendingMessage?.classList.add('hidden');

        sentMessage?.classList.remove('hidden');
        requestAnimationFrame(() => {
          sentMessage?.classList.remove('opacity-0', 'translate-y-4');
        });

        const result = await response.json();
        
        if (result.success) {
          sentMessage?.classList.remove('hidden');
          requestAnimationFrame(() => {
            sentMessage?.classList.remove('opacity-0', 'translate-y-4');
          });

          setTimeout(() => {
            form.reset();
            sentMessage?.classList.add('hidden', 'opacity-0', 'translate-y-4');
            sendingDiv?.classList.add('hidden');
          }, 3000);

        } else {
          console.error('Error al enviar el correo:', result.error);
          alert('Error al enviar el mensaje!!! Intente nuevamente...');
          sendingDiv?.classList.add('hidden');
          form.reset();
          return;
        }

      } catch (error) {
        
        console.error('Error al enviar el email:', error);
        sendingMessage?.classList.add('hidden');
        errorMessage?.classList.remove('hidden');
        requestAnimationFrame(() => {
          errorMessage?.classList.remove('opacity-0', 'translate-y-4');
        });

        setTimeout(() => {
          errorMessage?.classList.add('hidden', 'opacity-0', 'translate-y-4');
          sendingDiv?.classList.add('hidden');
        }, 3000);

      } finally {
        btnSubmit.disabled = false;
        grecaptcha.reset();
      }

    });

</script>