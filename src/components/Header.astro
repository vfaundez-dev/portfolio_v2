---
const navItems = [
  { id: 0, name: 'inicio', link: '/' },
  { id: 1, name: 'perfil', link: '/#profile' },
  { id: 2, name: 'proyectos', link: '/#projects' },
  { id: 3, name: 'habilidades', link: '/#skills' },
  { id: 4, name: 'contacto', link: '/#contact' },
];
---

<header class="fixed top-0 left-0 w-full z-50">
  <div class="container mx-auto px-12 lg:max-w-[70rem] xl:max-w-[76rem] 2xl:max-w-[92rem]">
    <nav id="main-nav" class="text-gray-100">
      <div class="flex justify-between items-center py-6 xl:py-8 lg:py-8">
        <!-- Logo Section -->
        <div class="text-xl font-bold">
          <a id="menu-title" href="/" class="relative hover:text-orange-500 transition duration-300">
            { `{VFH Portfolio}` }
          </a>
        </div>
        <!-- Navigation Items -->
        <ul id="menu-items" class="flex flex-row lg:space-x-12 xl:space-x-12 items-center font-mono text-gray-100">
          {
            navItems.map(({ id, name, link }) => (
              <li class="menu-item">
                <a href={link} class="group relative inline-block hover:text-orange-500 font-semibold transition duration-300">
                  <span class="text-yellow-500 opacity-0 group-hover:opacity-100 absolute -left-4 transition-opacity duration-300">
                    {'>'}
                  </span>
                  <span class="text-orange-500 group-hover:text-gray-100 transition-colors duration-300">
                    0{id}
                  </span>
                  <span class="text-md">/ {name}</span>
                  <span class="absolute -bottom-2 left-0 w-0 h-[1.5px] bg-orange-500 group-hover:w-full transition-all duration-300 whitespace-nowrap"></span>
                </a>
              </li>
            ))
          }
        </ul>
        <!-- Mobile Menu Button -->
        <button id="menu-toggle" class="hidden text-gray-100 hover:text-orange-500 focus:outline-none">
          <svg id="menu-open" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
          <svg id="menu-close" class="h-6 w-6 text-right hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    </nav>
  </div>
</header>

<script>
  const menuToggle = document.getElementById('menu-toggle');
  const menuItems = document.getElementById('menu-items');
  const body = document.body;
  const menuOpen = document.getElementById('menu-open');
  const menuClose = document.getElementById('menu-close');

  function toggleMenu() {
    menuItems?.classList.toggle('mobile-menu-active');
    body.classList.toggle('menu-open');
    menuOpen?.classList.toggle('hidden');
    menuClose?.classList.toggle('hidden');
  }

  menuToggle?.addEventListener('click', toggleMenu);

  // Close Menu when clicking on a link
  menuItems?.querySelectorAll('a').forEach(link => {
    link.addEventListener('click', () => {
      if (window.innerWidth < 1024) {
        toggleMenu();
      }
    });
  });

  // Handle responsive behavior
  function handleResponsive() {
    if (window.innerWidth < 1024) {
      menuToggle?.classList.remove('hidden');
      menuItems?.classList.add('hidden');
    } else {
      menuToggle?.classList.add('hidden');
      menuItems?.classList.remove('hidden', 'mobile-menu-active');
      body.classList.remove('menu-open');
      menuOpen?.classList.remove('hidden');
      menuClose?.classList.add('hidden');
    }
  }

  window.addEventListener('resize', handleResponsive);
  handleResponsive(); // Call on initial load

  // Header handle scroll event
  let lastScroll = 0;
  const header = document.querySelector('header');
  document.addEventListener('scroll', (event) => {
    lastScroll = window.scrollY;
    if (lastScroll >= 100) {
      header?.classList.add('backdrop-blur-[4px]', 'backdrop-saturate-[100%]', 'bg-[#011221]', 'bg-opacity-60');
    } else {
      header?.classList.remove('backdrop-blur-[4px]', 'backdrop-saturate-[100%]', 'bg-[#011221]', 'bg-opacity-60');
    }
  });
</script>